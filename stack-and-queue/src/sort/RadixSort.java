package sort;

/**
 * @Description: 基数排序
 * 时间： d代表数字长度 r代表数字取值范围 n代表个数
 *  平均：O(d(r+n))
 *  最好：O(d(dr+n))
 *  最坏：O(d(r+n))
 * 空间：O(rd+n) // 二维桶大小+一维存储
 * 稳定
 *
 * 通过序列中各个元素的值，对排序的N个元素进行若干趟的“分配”与“收集”来实现排序。
 * 分配：我们将L[i]中的元素取出，首先确定其个位上的数字，根据该数字分配到与之序号相同的桶中
 * 收集：当序列中所有的元素都分配到对应的桶中，再按照顺序依次将桶中的元素收集形成新的一个待排序列L[ ]
 * 对新形成的序列L[]重复执行分配和收集元素中的十位、百位...直到分配完该序列中的最高位，则排序结束
 * @Author: lmwis
 * @Date 2021-03-05 14:04
 * @Version 1.0
 */
public class RadixSort {
}
